log:
  level: info
  filters:
    - module: quinn::connection
      level: off
    - module: wasmer_compiler_cranelift::translator::func_translator
      level: off
connection_manager:
  listen_address: 127.0.0.1
  listen_port: 12012
  max_request_response_size: 8MiB
gateway_manager:
  listen_address: 0.0.0.0
  listen_port: 12080
gossip:
  heartbeat_interval: 1s
  assume_dead_after_missed_heartbeats: 10
  max_peers: 6
  peer_update_interval: 10s
  liveness_check_interval: 1s
  network_stabilization_interval: 5s
initial_cluster:
  - address: localhost
    gossip_port: 12012
    pd_port: 2380
runtime:
  cache_path: runtime-cache
  include_function_logs: false
scheduler:
  tick_interval: 1s
blockchain_monitor:
  solana_cluster_rpc_url: https://api.mainnet-beta.solana.com:8899/
  solana_cluster_pub_sub_url: wss://api.mainnet-beta.solana.com:8900/
  solana_provider_public_key: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  solana_region_number: 1
  solana_usage_signer_private_key: AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
  solana_usage_report_interval: 1d
# TODO
# db_manager:
#   usage_report_duration: 15m
tikv:
  # if you already have a TiKV cluster running use the external template and remove the internal key.
  # external:
  # - address: 127.0.0.1
  #   port: 8000
  # - address: 127.0.0.1
  #   port: 8000
  internal:
    # The internal configuration starts a [TiKV](https://tikv.org/) cluster, with a
    # PD node and a TiKV node alongside each mu-executor instance. Note that this is
    # not recommended for serious deployments.
    pd:
      data_dir: /var/lib/mu-executor/pd-data/
      peer_url:
        address: 0.0.0.0
        port: 2380
      client_url:
        address: 0.0.0.0
        port: 2379
      log_file: /var/log/mu-executor/pd-server
    node:
      cluster_url:
        address: 0.0.0.0
        port: 20160
      data_dir: /var/lib/mu-executor/tikv-data/
      log_file: /var/log/mu-executor/tikv-server
storage:
  # If you already have an S3-compatible storage running, use
  # this instead of the internal template below:
  #
  # external:
  #   auth_config:
  #     access_key: some_access_key
  #     secret_key: some_secret_key
  #     security_token: null
  #     session_token: null
  #     profile: null
  #   region:
  #     region: us-east1
  #     endpoint: 127.0.0.1:8080
  #   bucket_name: some_bucket_name
  internal:
    # the internal configuration starts an instance of [JuiceFS](https://juicefs.com/).
    # JuiceFS supports many storage backends, including TiKV, and exposes an S3 API
    # which mu Storage connects to. You may configure JuiceFS to store its data within
    # the same TiKV instance as mu DB, but note that this is not recommended for serious
    # deployments. Also note that JuiceFS recommends using different TiKV clusters for
    # metadata and object storage.
    metadata_tikv_endpoints:
      - address: 127.0.0.1
        port: 2379
    object_storage_tikv_endpoints:
      - address: 127.0.0.1
        port: 2379
    storage:
      endpoint:
        address: 127.0.0.1
        port: 8001
