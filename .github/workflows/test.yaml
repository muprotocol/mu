name: test

on:
  pull_request:

env:
  LLVM_SYS_120_PREFIX: /usr/lib/llvm-12/
  RUST_BACKTRACE: full

jobs:
  lint_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir:
          - executor
          - cli
          - rust-libs/mailbox_processor
          - marketplace
          - rust-libs/mu_stack
          - sdk
          - rust-libs/common
          - rust-libs/runtime
          - rust-libs/gateway
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Restore dependencies cache
        uses: actions/cache@v3
        if: success()
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            cli/target/
            executor/target/
            marketplace/target/
            rust-libs/common/target/
            rust-libs/db/target/
            rust-libs/db-embedded-tikv/target/
            rust-libs/gateway/target/
            rust-libs/mailbox_processor/target/
            rust-libs/mu_stack/target/
            rust-libs/runtime/target/
            sdk/target/
            node_modules/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential curl libssl-dev libudev-dev pkg-config zlib1g-dev clang cmake make language-pack-en libclang-common-12-dev llvm-12-dev protobuf-compiler
      - name: Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.67.1
          override: true
          components: rustfmt, clippy
          target: wasm32-wasi
      - name: Check style
        run: cargo fmt -- --check
        working-directory: ${{ matrix.dir }}
      - name: Run Lints
        run: cargo clippy --no-deps --all-targets --tests -- -D warnings
        working-directory: ${{ matrix.dir }}
      - name: Run tests
        run: cargo test --verbose
        working-directory: ${{ matrix.dir }}
        env:
          RUST_BACKTRACE: 1
      - name: Install Node.js
        uses: actions/setup-node@v2
        with: 
          node-version: 14
      - name: Install Salona
        run: sh -c "$(curl -sSfL https://release.solana.com/stable/install)"
      - name: Install Anchor
        if: matrix.dir == 'marketplace'
        run: |
          cargo install --git https://github.com/coral-xyz/anchor avm --locked --force
          avm install latest
          avm use latest
      - name: Install npm dependencies
        if: matrix.dir == 'marketplace'
        run: npm install
      - name: Build smart contract
        if: matrix.dir == 'marketplace'
        run: anchor build
      - name: Run anchor tests
        if: matrix.dir == 'marketplace'
        run: anchor run test
      - name: Save dependencies cache
        uses: actions/cache@v3
        if: success()
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            cli/target/
            executor/target/
            marketplace/target/
            rust-libs/common/target/
            rust-libs/db/target/
            rust-libs/db-embedded-tikv/target/
            rust-libs/gateway/target/
            rust-libs/mailbox_processor/target/
            rust-libs/mu_stack/target/
            rust-libs/runtime/target/
            sdk/target/
            node_modules/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
